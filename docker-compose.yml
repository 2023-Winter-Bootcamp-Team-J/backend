version: '3'

services:
  mysql:
    image: mysql:8.0.11
    container_name: mysql
    platform: linux/amd64
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE} 
      MYSQL_ROOT_HOST: ${MYSQL_ROOT_HOST}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: Asia/Seoul
    ports:
      - "3306:3306"
    restart: always
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - ./nextpage-db/mysql:/usr/src/mysql

  neo4j:
    container_name: neo4j
    image: neo4j:latest
    restart: always
    environment:
      NEO4J_AUTH: ${NEO4J_USERNAME}/${NEO4J_PASSWORD}
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - ./nextpage-db/neo4j/data:/data
      - ./nextpage-db/neo4j/logs:/logs

  backend:
    # FIXME: 프로젝트 루트경로기준으로 수정해야함.
    build:
      context: .
      args:
          DJANGO_ALLOWED_HOSTS: “*”
          DJANGO_SECRET_KEY: “*”
          DJANGO_CORS_ORIGIN_WHITELIST: “*”
    container_name: django
    # command : 컨테이너가 띄워질 때 실행하는 명령어 / 서버실행
    command: sh -c "python3 manage.py makemigrations && python3 manage.py migrate && python3 manage.py loaddata init_data.json && python3 manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/backend
    restart: on-failure
    ports:
      - "8000:8000"
    depends_on:
      - mysql
      - neo4j



  rabbitmq:
    hostname: nextpage_host
    image: rabbitmq:3-management
    command: rabbitmq-server
    #컨테이너를 stop 시키기 전까지 항상 재시작
    restart: no
    environment:
      - RABBITMQ_DEFAULT_USER=npage
      - RABBITMQ_DEFAULT_PASS=npage123
      - RABBITMQ_DEFAULT_VHOST=npage_host
    ports:
      - 5672:5672    # 이 포트로는 접속 안됨. 나중에 더 알아보고 추가할 예정
      - 15672:15672  # 이 포트로 접근해서 guest/guest 입력
    volumes:
      - ./backend:/var/lib/rabbitmq
    # 가상 네트워크 연결
    networks:
      - npage


  celery:
    platform: linux/amd64
    build:
      context: .
    restart: unless-stopped
    depends_on:
      - "rabbitmq"
    networks:
      - npage
    command: [ "celery","-A", "celery_app", "worker", "--loglevel=info" ]
    volumes:
      - ./backend:/backend



volumes:
  nextpage-db:


networks:
  npage: